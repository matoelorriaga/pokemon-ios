//
//  MainViewControllerTests.swift
//  pokemon-ios
//
//  Created by Mat√≠as Elorriaga on 8/4/17.
//  Copyright (c) 2017 melorriaga. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import pokemon_ios
import XCTest

class MainViewControllerTests: XCTestCase {
    
    var sut: MainViewController!
    var window: UIWindow!
    
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupMainViewController()
    }
    
    override func tearDown() {
        window = nil
        super.tearDown()
    }
    
    // setup
    
    func setupMainViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "MainViewController") as! MainViewController
    }
    
    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // test doubles
    
    class MainViewControllerOutputSpy: MainViewControllerOutput {
        
        var doGetPokemonListCalled = false
        
        func doGetPokemonList(request: Main.GetPokemonList.Request) {
            doGetPokemonListCalled = true
        }
    
    }
    
    class UITableViewSpy: UITableView {
        
        var reloadDataCalled = false
        
        override func reloadData() {
            reloadDataCalled = true
        }
        
    }
    
    class MainRouterSpy: MainRouter {
        
        var navigateToDetailsSceneCalled = false
        
        override func navigateToDetailsScene() {
            navigateToDetailsSceneCalled = true
        }
        
    }
    
    // tests
    
    func testWhenLoadedShouldCallInteractor() {
        // given
        let mainViewControllerOutputSpy = MainViewControllerOutputSpy()
        sut.output = mainViewControllerOutputSpy
        
        // when
        loadView()
        
        // then
        XCTAssert(mainViewControllerOutputSpy.doGetPokemonListCalled)
    }
    
    func testWhenPullToRefreshShouldCallInteractor() {
        let mainViewControllerOutputSpy = MainViewControllerOutputSpy()
        sut.output = mainViewControllerOutputSpy
        
        // when
        sut.refresh(sut.refreshControl)
        
        // then
        XCTAssert(mainViewControllerOutputSpy.doGetPokemonListCalled)
    }
    
    func testShouldDisplayPokemonList() {
        // given
        let tableViewSpy = UITableViewSpy()
        sut.tableView = tableViewSpy
        
        // when
        let viewModel = Main.GetPokemonList.ViewModel(pokemonList: [])
        sut.displayGetPokemonList(viewModel: viewModel)
        
        // then
        XCTAssert(tableViewSpy.reloadDataCalled)
    }
    
    func testSelectTableViewRowShouldNavigateToDetailsScene() {
        // given
        let mainRouterSpy = MainRouterSpy()
        sut.router = mainRouterSpy
        
        // when
        loadView()
        let indexPath = IndexPath(row: 0, section: 0)
        sut.tableView(sut.tableView, didSelectRowAt: indexPath)
        
        // then
        XCTAssert(mainRouterSpy.navigateToDetailsSceneCalled)
    }
    
    func testNumberOfRowsInTableViewShouldBeEqualToPokemonListCount() {
        // given
        let pokemonList = [
            Pokemon(JSON: ["id": 1, "name": "bulbasaur"])!,
            Pokemon(JSON: ["id": 2, "name": "ivysaur"])!,
            Pokemon(JSON: ["id": 3, "name": "venusaur"])!
        ]
        sut.pokemonList = pokemonList
        
        // when
        loadView()
        let numberOfRowsInSection = sut.tableView(sut.tableView, numberOfRowsInSection: 0)
        
        // then
        XCTAssertEqual(numberOfRowsInSection, pokemonList.count)
    }
    
    func testShouldConfigureTableViewCells() {
        // given
        let pokemonList = [
            Pokemon(JSON: ["id": 1, "name": "bulbasaur"])!,
            Pokemon(JSON: ["id": 2, "name": "ivysaur"])!,
            Pokemon(JSON: ["id": 3, "name": "venusaur"])!
        ]
        sut.pokemonList = pokemonList
        
        // when
        loadView()
        let indexPath = IndexPath(row: 0, section: 0)
        let cell = sut.tableView(sut.tableView, cellForRowAt: indexPath)
        
        // then
        XCTAssertEqual(cell.textLabel?.text, "bulbasaur")
    }
    
}
