//
//  DetailsViewControllerTests.swift
//  pokemon-ios
//
//  Created by Mat√≠as Elorriaga on 8/4/17.
//  Copyright (c) 2017 melorriaga. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import pokemon_ios
import XCTest

class DetailsViewControllerTests: XCTestCase {
    
    var sut: DetailsViewController!
    var window: UIWindow!
    
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupDetailsViewController()
    }
    
    override func tearDown() {
        window = nil
        super.tearDown()
    }
    
    // setup
    
    func setupDetailsViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "DetailsViewController") as! DetailsViewController
        
        sut.pokemonId = 1
        sut.pokemonName = "bulbasaur"
    }
    
    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // test doubles
    
    class DetailsViewControllerOutputSpy: DetailsViewControllerOutput {
        
        var doGetPokemonDetailsCalled = false
        var request: Details.GetPokemonDetails.Request!
        
        func doGetPokemonDetails(request: Details.GetPokemonDetails.Request) {
            doGetPokemonDetailsCalled = true
            self.request = request
        }
    
    }
    
    // tests
    
    func testWhenLoadedShouldCallInteractor() {
        // given
        let detailsViewControllerOutputSpy = DetailsViewControllerOutputSpy()
        sut.output = detailsViewControllerOutputSpy
        
        // when
        loadView()
        
        // then
        XCTAssert(detailsViewControllerOutputSpy.doGetPokemonDetailsCalled)
    }
    
    func testWhenLoadedShouldUpdateNavigationBarTitle() {
        // given

        // when
        loadView()
        
        // then
        XCTAssertEqual(sut.title, "bulbasaur (#1)")
    }
    
    func testShouldDisplayPokemonDetails() {
        // given
        let pokemon = Pokemon(JSON: [
            "id": 1,
            "name": "bulbasaur",
            "height": 7,
            "weight": 69,
            "base_experience": 64
        ])!
        let viewModel = Details.GetPokemonDetails.ViewModel(pokemon: pokemon)
        
        // when
        loadView()
        sut.displayGetPokemonDetails(viewModel: viewModel)
        
        // then
        XCTAssertEqual(sut.idLabel.text, "id: \(pokemon.id!)")
        XCTAssertEqual(sut.nameLabel.text, "name: \(pokemon.name!)")
        XCTAssertEqual(sut.heightLabel.text, "height: \(pokemon.height!)")
        XCTAssertEqual(sut.weightLabel.text, "weight: \(pokemon.weight!)")
        XCTAssertEqual(sut.baseExperienceLabel.text, "base experience: \(pokemon.baseExperience!)")
        for view in sut.pokemonViewCollection {
            XCTAssert(!view.isHidden)
        }
        XCTAssert(sut.activityIndicator.isHidden)
        XCTAssert(!sut.activityIndicator.isAnimating)
    }
    
}
